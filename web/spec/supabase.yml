openref: 0.1

info:
  title:  Supabase Client
  description: |
    
    Our client library is modular. Each sub-library is a standalone implementation for a single external system. This is one of the ways we support existing tools.

    - **`supabase-{lang}`**: Combines libraries and adds enrichments.
      - `postgrest-{lang}`: Client library to work with [PostgREST](https://github.com/postgrest/postgrest) 
      - `realtime-{lang}`: Client library to work with [Realtime](https://github.com/supabase/realtime)    
      - `gotrue-{lang}`: Client library to work with [GoTrue](https://github.com/netlify/gotrue)         

    
    | Repo                                                                                       | Official                                         | Community        |
    |-----------------------|--------------------------------------------------|------------------|
    | **`supabase-{lang}`**     | [`JS`](https://github.com/supabase/supabase-js) | [`C#`](https://github.com/supabase/supabase-csharp) \| [`Python`](https://github.com/supabase/supabase-py) \| `Rust` |
    | `postgrest-{lang}` | [`JS`](https://github.com/supabase/postgrest-js) | [`C#`](https://github.com/supabase/postgrest-csharp) \| [`Python`](https://github.com/supabase/postgrest-py) \| [`Rust`](https://github.com/supabase/postgrest-rs) |
    | `realtime-{lang}`  | [`JS`](https://github.com/supabase/realtime-js) | `C#` \| `Python` \| `Rust` |
    | `gotrue-{lang}`    | [`JS`](https://github.com/supabase/gotrue-js) | `C#` \| `Python` \| `Rust` |


    
  definition: spec/combined.json
  libraries: 
    - name: 'JavaScript'
      id: 'js'
      version: '0.0.1'
    - name: 'Python'
      id: 'py'
      version: '0.0.1'
  docs:
    sidebar:
      - name: 'Supabase Client'
        items:
          - index
          - Installing
          - Initializing
      - name: 'Query Builder'
        items:
          - from()
          - from().select()
      #     - insert
      #     - update
      #     - delete
      #     - rpc
      # - name: 'Filters'
      #   items:
      #     - eq
      #     - neq
      #     - gt
      #     - gte
      #     - lt
      #     - lte
      #     - like
      #     - ilike
      #     - is
      #     - in
      #     - cs
      #     - cd
      #     - sl
      #     - sr
      #     - nxl
      #     - nxr
      #     - adj
      #     - ov
      #     - fts
      #     - plfts
      #     - phfts
      #     - wfts

pages:

  Installing: 
    description: |
      All JavaScript libraries are built directly by the Supabase team. 
      
      Other languages are built by the community and supported by Supabase.

      ## Javascript

      ```bash
      npm install @supabase/postgrest-js
      ```

      - [Source code](https://github.com/supabase/postgrest-js)

      ## Python

      ```bash
      # Not yet implemented

  Initializing: 
    $ref: '@supabase/supabase-js."SupabaseClient".SupabaseClient.constructor'

  from():
    $ref: '@supabase/supabase-js."SupabaseClient".SupabaseClient.from'

  from().select():
    $ref: '@supabase/postgrest-js."lib/PostgrestQueryBuilder".PostgrestQueryBuilder.select'

  # insert:
  #   $ref: '"lib/PostgrestQueryBuilder".PostgrestQueryBuilder.insert'

  # update:
  #   $ref: '"lib/PostgrestQueryBuilder".PostgrestQueryBuilder.update'

  # delete:
  #   $ref: '"lib/PostgrestQueryBuilder".PostgrestQueryBuilder.delete'

  # rpc:
  #   $ref: '"PostgrestClient".PostgrestClient.rpc'

  # eq:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.eq'

  # neq:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.neq'

  # gt:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.gt'

  # gte:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.gte'

  # lt:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.lt'

  # lte:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.lte'

  # like:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.like'

  # ilike:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.ilike'

  # is:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.is'

  # in:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.in'

  # cs:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.cs'

  # cd:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.cd'

  # sl:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.sl'

  # sr:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.sr'

  # nxl:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.nxl'

  # nxr:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.nxr'

  # adj:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.adj'

  # ov:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.ov'

  # fts:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.fts'

  # plfts:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.plfts'

  # phfts:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.phfts'

  # wfts:
  #   $ref: '"lib/PostgrestFilterBuilder".PostgrestFilterBuilder.wfts'